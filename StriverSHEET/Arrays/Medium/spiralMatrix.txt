class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        
        int rows = matrix.size();
        int cols = matrix[0].size();

        int left = 0;
        int right = cols -1 ;
        int top = 0;
        int bottom  = rows-1;

        vector<int> ans;
        //right->bottom->left->top
        while( top <= bottom && left <= right){

            //right 
        for(int i = left ; i<=right; i++){
            ans.push_back(matrix[top][i]);
            
        }
        top++;

        //bottom 
        for(int i = top ; i <= bottom; i++){
            ans.push_back(matrix[i][right]);
        }
        right --;

        //left 
        if( top <= bottom){
            for(int j = right; j >= left; j--){
            ans.push_back(matrix[bottom][j]);
            }
            bottom --;
        }
        
        
        //top
        if(left <= right){
            for(int i  = bottom; i >= top; i--){
            ans.push_back(matrix[i][left]);

            }
            left ++;
        }
        

        }

        return ans;


    }
};